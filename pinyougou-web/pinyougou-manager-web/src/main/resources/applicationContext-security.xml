<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
    <!--配置拦截规则-->
    <!--不需要拦截的请求-->
    <security:http pattern="/css/**" security="none"></security:http>
    <security:http pattern="/img/**" security="none"></security:http>
    <security:http pattern="/js/**" security="none"></security:http>
    <security:http pattern="/login.html" security="none"></security:http>
    <security:http pattern="/plugins/**" security="none"></security:http>
    <security:http pattern="/user/vcode" security="none"></security:http>

    <security:http use-expressions="true" entry-point-ref="authenticationEntryPoint">
        <!--
            配置所有登录用户或未登录用户都能访问的请求地址
            permitAll: 会进Security的登录Filter，如果是登录用户，可以获取到登录用户名
         -->
        <security:intercept-url pattern="/user/login" access="permitAll"/>
        <!--除了上面的请求，其他请求都需要ROLE_ADMIN权限才能访问-->
        <security:intercept-url pattern="/**" access="hasAnyRole('ADMIN')"/>
        <security:form-login
                login-page="/login.html"
                username-parameter="username"
                password-parameter="password"
                default-target-url="/admin/index.html"
                always-use-default-target="true"
                authentication-failure-url="/login.html"/>

        <security:csrf disabled="true" />
        <!--配置头信息，指定框架头信息(iframe子窗口也可以访问)-->
        <security:headers>
            <security:frame-options policy="SAMEORIGIN" />
        </security:headers>

        <security:logout logout-url="/logout" logout-success-url="/login.html" />
    </security:http>



    <bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <constructor-arg value="/user/login" />
    </bean>

    <!--认证管理器-->
    <security:authentication-manager id="authenticationManager">
        <!--配置认证提供者-->
        <security:authentication-provider>
            <!--配置用户认证服务（通过用户名密码方式）-->
            <security:user-service>
                <!--配置用户认证信息，密码，用户名, 角色-->
                <security:user name="admin" authorities="ROLE_ADMIN" password="123456"/>
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>
</beans>
